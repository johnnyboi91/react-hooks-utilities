{"version":3,"sources":["styles.module.css","../../src/helpers.js","FirstTest.js","../../src/index.js","SecondTest.js","ThirdTest.js","App.js","index.js"],"names":["module","exports","noop","value","getDimensions","el","rect","width","height","getWindowDimensions","window","document","clientHeight","getCurrentBreakpoint","breakpoint","testCallback","getElementById","innerText","FirstTest","callback","useState","state","setState","useEffect","useStateWithCb","className","styles","component","onClick","prev","id","SecondTest","ref","useRef","handleResize","dimensions","useDimensions","ThirdTest","useWindowDimensions","App","wrapper","ReactDOM","render"],"mappings":"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","file":"static/js/main.1786e166.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2haDg\",\"component\":\"styles_component__10QXg\"};","/**\n * noop\n * Sample (empty) function.\n * @param {any} value\n * @since 1.0.0\n */\nexport const noop = (value) => {\n}\n\n/**\n * getDimensions\n * Get element dimensions.\n * @param {HTMLElement} el\n * @return {{width: number, height: number}}\n */\nexport const getDimensions = (el) => {\n  const rect = el.getBoundingClientRect()\n  return {\n    width: el.clientWidth || rect.width,\n    height: el.clientHeight || rect.height\n  }\n}\n\n/**\n * getWindowDimensions\n * Get window dimensions.\n * @return {{width: number, height: number}}\n */\nexport const getWindowDimensions = () => {\n  return {\n    width:\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth,\n    height:\n      window.innerHeight ||\n      document.documentElement.clientHeight ||\n      document.body.clientHeight\n  }\n}\n\n/**\n * getCurrentBreakpoint\n * @param {number} width\n * @return {string}\n */\nexport const getCurrentBreakpoint = (width) => {\n  let breakpoint = 'xlg'\n  if (width < 1200 && width > 992) breakpoint = 'lg'\n  else if (width < 992 && width > 768) breakpoint = 'md'\n  else if (width < 768 && width > 600) breakpoint = 'sm'\n  else if (width < 600) breakpoint = 'xs'\n  return breakpoint\n}\n","import React from 'react'\nimport { useStateWithCb } from 'react-hooks-utilities'\nimport styles from './styles.module.css'\n\nconst testCallback = (value) => {\n  /** @type {HTMLElement} */\n  const el = document.getElementById('test')\n  el.innerText = `Current value is ${value}`\n}\n\nconst FirstTest = () => {\n  const [state, setState] = useStateWithCb(0, testCallback)\n  const increment = () => setState((prev) => prev + 1)\n  const decrement = () => setState((prev) => prev - 1)\n  return (\n    <div className={styles.component}>\n      <h2>useStateWithCb example</h2>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n      <p id=\"test\"/>\n      <small><i>By clciking on Increment/Decrement, callback passed to <b>useStateWithCb</b> will change paragraph (#test) text.</i></small>\n    </div>\n  )\n}\n\nexport default FirstTest\n","import { useState, useEffect, useRef } from 'react'\nimport {\n  noop,\n  getCurrentBreakpoint,\n  getWindowDimensions,\n  getDimensions\n} from './helpers'\n\n/**\n * useStateWithCb\n * @param {any} value\n * @param {(value: any) => void} callback\n * @return {[any, (value: any) => void]}\n * @since 1.0.0\n */\nexport const useStateWithCb = (value, callback = noop) => {\n  const [state, setState] = useState(value)\n  useEffect(() => callback(state), [state, callback])\n  return [state, setState]\n}\n\n/**\n * useDimensions\n * @return {{ref: React.MutableRefObject<any>, width: number, height: number}}\n * @since 1.0.0\n */\nexport const useDimensions = () => {\n  const ref = useRef()\n  const [state, setState] = useState({ width: 0, height: 0 })\n  const handleResize = () => {\n    const dimensions = getDimensions(ref.current)\n    setState((prev) => ({\n      ...prev,\n      width: dimensions.width,\n      height: dimensions.height\n    }))\n  }\n  useEffect(() => {\n    const dimensions = getDimensions(ref.current)\n    setState((prev) => ({\n      ...prev,\n      width: dimensions.width,\n      height: dimensions.height\n    }))\n    window.addEventListener('resize', handleResize, false)\n    return () => window.removeEventListener('resize', handleResize, false)\n  }, [])\n  return {\n    ref,\n    ...state\n  }\n}\n\n/**\n * useWindowDimensions\n * @return {{width: number, height: number, breakpoint: string}}\n * @since 1.0.0\n */\nexport const useWindowDimensions = () => {\n  const [state, setState] = useState({\n    width: 0,\n    height: 0,\n    breakpoint: 'lg'\n  })\n  const handleResize = () => {\n    const dimensions = getWindowDimensions()\n    setState((prev) => ({\n      ...prev,\n      width: dimensions.width,\n      height: dimensions.height,\n      breakpoint: getCurrentBreakpoint(dimensions.width)\n    }))\n  }\n  useEffect(() => {\n    const dimensions = getWindowDimensions()\n    setState((prev) => ({\n      ...prev,\n      width: dimensions.width,\n      height: dimensions.height,\n      breakpoint: getCurrentBreakpoint(dimensions.width)\n    }))\n    window.addEventListener('resize', handleResize, false)\n    return () => window.removeEventListener('resize', handleResize, false)\n  }, [])\n  return {\n    ...state\n  }\n}\n","import React from 'react'\nimport { useDimensions } from 'react-hooks-utilities'\nimport styles from './styles.module.css'\n\nconst SecondTest = () => {\n  const {\n    ref,\n    height,\n    width\n  } = useDimensions()\n  return (\n    <div\n      ref={ref}\n      className={styles.component}>\n      <h2>useDimensions example</h2>\n      <p><b>Element width:</b> {width}px</p>\n      <p><b>Element height:</b> {height}px</p>\n      <small><i>Try resizing the browser window to see changes.</i></small>\n    </div>\n  )\n}\n\nexport default SecondTest\n","import React from 'react'\nimport { useWindowDimensions } from 'react-hooks-utilities'\nimport styles from './styles.module.css'\n\nconst ThirdTest = () => {\n  const {\n    width,\n    height,\n    breakpoint\n  } = useWindowDimensions()\n  return (\n    <div className={styles.component}>\n      <h2>useWindowDimensions example</h2>\n      <p><b>Window width:</b> {width}px</p>\n      <p><b>Window height:</b> {height}px</p>\n      <p><b>Current breakpoint:</b> {breakpoint}</p>\n      <small><i>Try resizing the browser window to see changes.</i></small>\n    </div>\n  )\n}\n\nexport default ThirdTest\n","import React from 'react'\nimport FirstTest from './FirstTest'\nimport SecondTest from './SecondTest'\nimport ThirdTest from './ThirdTest'\nimport styles from './styles.module.css'\n\nconst App = () => {\n  return (\n    <div className={styles.wrapper}>\n      <FirstTest/>\n      <SecondTest/>\n      <ThirdTest/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}